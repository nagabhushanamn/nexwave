package com.app.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.app.db.DBConnectionFactory;
import com.app.model.Product;

public class ProductDAO {

	public void save(Product product) {
		Connection connection = null;
		try {
			connection = DBConnectionFactory.getConnection();
			connection.setAutoCommit(false);

			// 3. create JDBC statements with SQL
			String sql = "insert into pm.PRODUCTS(name,price,makeDate,type,description) values (?,?,?,?,?)";
			PreparedStatement ps = connection.prepareStatement(sql);
			ps.setString(1, product.getName());
			ps.setDouble(2, product.getPrice());
			ps.setDate(3, new Date(product.getMakeDate().getTime()));
			ps.setInt(4, product.getType().ordinal());
			ps.setString(5, product.getDescription());

			// 4. execute statement
			int count = ps.executeUpdate();

			connection.commit();

		} catch (SQLException e) {
			e.printStackTrace();
			try {
				connection.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			if (connection != null) {
				try {
					connection.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}

	}

	public void update(int id, double price) {
		Connection connection = null;
		try {
			connection = DBConnectionFactory.getConnection();
			connection.setAutoCommit(false);

			// 3. create JDBC statements with SQL
			String sql = "update pm.PRODUCTS set price=? where id=?";
			PreparedStatement ps = connection.prepareStatement(sql);
			ps.setDouble(1, price);
			ps.setInt(2, id);

			// 4. execute statement
			int count = ps.executeUpdate();

			connection.commit();

		} catch (SQLException e) {
			e.printStackTrace();
			try {
				connection.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		} finally {
			if (connection != null) {
				try {
					connection.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}

	}

	public void find(int id) {
		

	}

}
